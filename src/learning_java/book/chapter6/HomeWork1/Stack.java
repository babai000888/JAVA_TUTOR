package learning_java.book.chapter6.HomeWork1;/*
 * Домашнее задание 1 главы 6.
 *
 * Помимо очереди, в программах часто используется структура данных, которая называется стеком.
 * Обращение к стеку осуществляется по кринципу "первым пришел - последним обслужен".
 * Стек можно сравнить со стопкой тарелок, стоящих на столе. Последней берется тарелка,
 * поставленная на стол первой. Создайте класс Stack, реализующий стек для хранения символов.
 * используйте методы push() и pop() для манипулирования содержимым стека. Пользователь класса
 * Stack должен иметь возможность задавать размер стека при его создании. Все члены класса Stack,
 * кроме методов push() и pop(), дожны быть объявлены как private.
 * (Подсказка: в качестве исходной заготовки можете воспользоваться клссом Queue, изменив в нем
 * лиш способ доступа к данным.)
 *
 * @author Magnum
 */

/**
 * Клас реализующий стек для хранения символов
 */
class Stack {
    private char stck[]; // массив для хранения элементов
    private int top;  // значение вершины стека

    // Конструктор создающий стек заданной длинны
    public Stack(int size) {
        this.stck = new char[size + 1]; // Выделение памяди для стека
        this.top = 0;
    }

    // Конструктор создающий стек на основе имеющегося объкта Stack
    public Stack(Stack ob) {
        this.top = ob.top;
        this.stck = new char[ob.stck.length];

        // Копируем элементы в стек
        for (int i = 0; i < this.top; i++) {
            this.stck[i] = ob.stck[i];
        }
    }

    // Конструктор создающий стек на основе массива исходных значений
    public Stack(char a[]) {
        this.stck = new char[a.length + 1];

        for (int i = 0; i < a.length; i++) {
            push(a[i]);
        }
    }

    // Метод помещаюй символ в очередь
    public void push(char ch) {
        if (this.top == stck.length) {
            System.out.println(" - Стек заполнен.");
            return;
        }

        stck[this.top] = ch;
        this.top++;
    }

    // Метод извлекающий символ из очереди
    public char pop() {
        if (this.top == 0) {
            System.out.println(" - Стек пуста.");
            return (char) 0;
        }

        this.top--;
        return stck[this.top];
    }
}
